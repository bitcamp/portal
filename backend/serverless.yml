org: technica
app: portal
service: portal-backend

provider:
  name: aws
  region: us-east-1
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: portal-backend-${self:provider.stage}-layers-deploymentbucket
  environment:
    PLATFORM_BASE_URL: ${file(./config/${self:provider.stage}.json):PLATFORM_BASE_URL}
    REGISTRATION_TABLE: ${file(./config/${self:provider.stage}.json):REGISTRATION_TABLE}
    # REFERRALS_TABLE: ${file(./config/${self:provider.stage}.json):REFERRALS_TABLE}
    # TRACKING_TABLE: ${file(./config/${self:provider.stage}.json):TRACKING_TABLE}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - dynamodb:Query
       - dynamodb:Scan
       - dynamodb:GetItem
       - dynamodb:PutItem
       - dynamodb:UpdateItem
       - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*"
    - Effect: "Allow"
      Action:
        - secretsmanager:DescribeSecret
        - secretsmanager:GetSecretValue
      Resource: "arn:aws:secretsmanager:us-east-1:*"
    - Effect: "Allow"
      Action:
        - ses:SendEmail
        - ses:SendRawEmail
      Resource: "arn:aws:ses:us-east-1:*"

functions:
  register:
    handler: handler.register
    description: Receives registration information from a user
    events:
      - http: 
          path: register
          method: post
          cors: true

resources: # define DynamoDB tables within serverless
  Resources:
    registrationTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${file(./config/${self:provider.stage}.json):REGISTRATION_TABLE}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
          - AttributeName: referral_id
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:  # we want to be able to get users by referral_id
        - IndexName: referralsIndex
          KeySchema:
          - AttributeName: referral_id
            KeyType: HASH
          Projection:
            NonKeyAttributes:
            - name
            ProjectionType: INCLUDE
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1

package:
  exclude:
    node_modules/**

plugins:
  - serverless-sentry
  - serverless-jest-plugin
  - serverless-layers

custom:
  sentry:
    dsn: ${file(./config/${self:provider.stage}.json):SENTRY_DSN}
  serverless-layers:
    dependenciesPath: ./package.json